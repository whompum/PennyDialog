<?xml version="1.0" encoding="utf-8"?>
<resources>

    <!--
        Base theme for this dialog. It will initialize all basic variables.
        Out of the box you have a lightly colored, rounded cornered Number dialog
        To customize, simply override this theme in your application,
        change your wanted attributes, and pass the reference in a bundle
        to the newInstance() method of the PennyDialog!
    -->
    <style name="PennyDialog" parent="Base.Theme.AppCompat.Light.Dialog">
        <item name="pennyValueCardColor">@color/light_blue</item>
        <item name="pennyNumbersCardColor">@color/light_grey</item>
        <item name="pennyNumbersTextColor">@color/white</item>
        <item name="pennyValueTextColor">@color/white</item>

        <item name="pennyTitleTextColor">?attr/pennyValueTextColor</item>
        <item name="pennyTitleText">@string/title</item>

        <item name="pennyFabColor">@color/white</item>

        <item name="pennyTopLeftRadius">0dp</item>
        <item name="pennyTopRightRadius">15dp</item>
        <item name="pennyBottomLeftRadius">15dp</item>
        <item name="pennyBottomRightRadius">15dp</item>

        <item name="pennyFabBackgroundColor">@color/white</item>
        <item name="pennyFabSource">@drawable/ic_checkmark</item>

        <item name="android:windowBackground">@null</item>
    </style>

    <!--Styling used for the title in the topright corner
        By default aligns the title to the top left-->
    <style name="TitleTextStyle">
        <item name="android:layout_gravity">top|start|left</item>
        <item name="android:textSize">@dimen/titleTextSize</item>
        <item name="android:textColor">?attr/pennyTitleTextColor</item>
        <item name="android:text">?attr/pennyTitleText</item>
    </style>

    <!--Styling used for the CurrenycEditText-->
    <style name="ValueTextStyle">
        <item name="android:background">@null</item>
        <item name="android:textSize">@dimen/valueTextSize</item>
        <item name="android:textColor">?attr/pennyValueTextColor</item>
        <item name="android:clickable">false</item>
        <item name="android:textCursorDrawable">@null</item>
        <item name="android:maxLines">1</item>
        <item name="android:layout_marginTop">@dimen/valueMargin</item>
        <item name="android:layout_marginBottom">@dimen/valueMargin</item>
        <item name="android:layout_gravity">center</item>
    </style>

    <!--Styling applied on the number grid. This is per button-->
    <style name="NumbersStyle">
        <item name="android:minWidth">@dimen/numbersWidth</item>
        <item name="android:layout_width">@dimen/numbersWidth</item>
        <item name="android:layout_height">@dimen/numbersHeight</item>
        <item name="android:padding">0dp</item>
        <item name="android:textSize">@dimen/numbersTextSize</item>
        <item name="android:textColor">?attr/pennyNumbersTextColor</item>
        <item name="android:background">?attr/selectableItemBackgroundBorderless</item>
    </style>

    <style name="PennyFabStyle">
        <item name="fabSize">normal</item>
        <item name="srcCompat">?attr/pennyFabSource</item>
        <item name="backgroundTint">?attr/pennyFabBackgroundColor</item>
        <item name="android:scaleType">centerInside</item>
        <item name="android:scaleX">0</item>
        <item name="android:scaleY">0</item>
        <item name="android:visibility">invisible</item>
        <item name="android:layout_width">wrap_content</item>
        <item name="android:layout_height">wrap_content</item>
    </style>


</resources>
